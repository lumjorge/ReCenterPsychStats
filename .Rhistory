TwoWay_neg<-aov(Negative~Rater*Photo, Ramdhani_df)
summary(TwoWay_neg)
model.tables(TwoWay_neg,"means")
plot(TwoWay_neg)
library(lsr)
etaSquared(TwoWay_neg)
Dayaknese <- subset(Ramdhani_df, Rater == "Dayaknese") #subset data
View(Dayaknese)
Dayaknese <- subset(Ramdhani_df, Rater == "Dayaknese") #subset data
Dayaknese_simple <- aov(Negative ~ Photo, data = Dayaknese) #change df to subset, new model name
summary(Dayaknese_simple) #output for simple main effect
etaSquared(Dayaknese_simple, anova = FALSE ) #effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
Madurese <- subset(Ramdhani_df, Rater == "Madurese") #subset data
Madurese_simple <- aov(Negative ~ Photo, data = Madurese) #change df to subset, new model name
summary(Madurese_simple) #output for simple main effect
etaSquared(Madurese_simple, anova = FALSE ) #effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
View(Madurese)
View(Madurese)
Javanese <- subset(Ramdhani_df, Rater == "Javanese") #subset data
Javanese_simple <- aov(Negative ~ Photo, data = Javanese) #change df to subset, new model name
summary(Javanese_simple) #output for simple main effect
etaSquared(Javanese_simple, anova = FALSE ) #effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
library(ggpubr)
ggboxplot(Ramdhani_df, x = "Rater", y = "Negative", color = "Photo",xlab = "Ethnicity of Rater", ylab = "Negative Reaction")
contrasts(Ramdhani_df$Rater)
# tell R which groups to compare
c1 <- c(1, -2, 1)
c2 <- c(-1, 0, 1)
mat <- cbind(c1,c2) #combine the above bits
contrasts(Ramdhani_df$Rater) <- mat # attach the contrasts to the variable
contrasts (Ramdhani_df$Rater)
Dayaknese_Ph <- subset(Ramdhani_df, Photo == "Dayaknese") #subset data
Dykn_simple <- aov(Negative ~ Rater, data = Dayaknese_Ph) #change df to subset, new model name
summary(Dykn_simple) #output for simple main effect
etaSquared(Dykn_simple, anova = FALSE ) #effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
summary.aov(Dykn_simple, split=list(Rater=list("Javanese v Dayaknese and Madurese"=1, "Dayaknese  Madurese" = 2)))
Madurese_Ph <- subset(Ramdhani_df, Photo == "Madurese") #subset data
Mdrs_simple <- aov(Negative ~ Rater, data = Madurese_Ph) #change df to subset, new model name
summary(Mdrs_simple) #output for simple main effect
etaSquared(Mdrs_simple, anova = FALSE ) #effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
summary.aov(Mdrs_simple, split=list(Rater=list("Javanese v Dayaknese and Madurese"=1, "Dayaknese  Madurese" = 2)))
ggboxplot(Ramdhani_df, x = "Photo", y = "Negative", color = "Rater", xlab = "Photo Stimulus",
ylab = "Negative Reaction")
6*(6-1)/2
posthocs <- TukeyHSD(TwoWay_neg, ordered = TRUE)
posthocs
.05/15
.05/15
.05/14
str(posthocs)
write.csv(posthocs$'Rater:Photo', 'posthocsOUT.csv')
.05/7
contrasts(Dayaknese_Ph$Rater)<-contr.poly(3)
poly_Dy<-aov(Negative ~ Rater, data = Dayaknese_Ph)
summary.lm(poly_Dy)
contrasts(Madurese_Ph$Rater)<-contr.poly(3)
poly_Md<-aov(Negative ~ Rater, data = Madurese_Ph)
summary.lm(poly_Md)
RaterMain <- aov(Negative ~ Rater, data = Ramdhani_df) #DV ~ IV  I say, "DV by IV"
model.tables (RaterMain) #ANOVA output
summary(RaterMain)
etaSquared(RaterMain)
ggboxplot(Ramdhani_df, x = "Rater", y = "Negative", xlab = "Ethnicity of Rater", ylab = "Negative Reaction")
TukeyHSD(RaterMain, ordered = TRUE)
#Contrast1  compares Control against the combined effects of Low and High.
main_c1 <- c(1,-2,1)
#Contrast2 excludes Control; compares Low to High.
main_c2 <- c(-1,0,1)
contrasts(Ramdhani_df$Rater)<-cbind(main_c1, main_c2)
contrasts(Ramdhani_df$Rater)
mainPlanned <- aov(Negative ~ Rater, data = Ramdhani_df)
summary.lm(mainPlanned)
contrasts(Ramdhani_df$Rater)<-cbind(c(1,-2,1), c(-1,0,1))
contrasts(Ramdhani_df$Rater)<-contr.poly(3)
mainTrend<-aov(Negative ~ Rater, data = Ramdhani_df)
summary.lm(mainTrend)
ggboxplot(Ramdhani_df, x = "Rater", y = "Negative", xlab = "Ethnicity of Rater", ylab = "Negative Reaction")
library(ggpubr)
ggboxplot(Ramdhani_df, x = "Rater", y = "Negative", color = "Photo",xlab = "Ethnicity of Rater", ylab = "Negative Reaction")
library(apaTables)
apa.2way.table(iv1 = Rater, iv2 = Photo, dv = Negative, data = Ramdhani_df, landscape=TRUE, table.number = 1, filename="Table_1_MeansSDs.doc")
apa.aov.table(TwoWay_neg, filename = "Table_2_effects.doc", table.number = 2, type = "II")
#this is what we did
Anova(TwoWay_neg)
#We change the SS type by applying it to our model.
Anova(TwoWay_neg, type ="III")
etaSquared(TwoWay_neg)
etaSquared(TwoWay_neg, type=3)
etaSquared(TwoWay_neg, anova = TRUE)
# get the partial eta-square (second number)
# and dfs
library(effectsize)
eta2_to_f(0.1066) #FactorA -- Rater
eta2_to_f(0.1274) #Factor B -- Photo
library(pwr2)
pwr.2way(a=3, b=2, alpha = 0.05, size.A = 37, size.B = 55, f.A = .345, f.B = .382)
ss.2way(a = 3, b = 2, alpha = .05, beta = .8, f.A = .345, f.B = .382, B= 100)
ss.2way(a = 3, b = 2, alpha = .05, beta = .80, f.A = .25, f.B = .25, B= 100) #if we expected a medium effect
ss.2way(a = 3, b = 2, alpha = .05, beta = .80, f.A = .10, f.B = .10, B= 100) #if we expected a small effect
bookdown:::mathquill()
citr:::insert_citation()
set.seed(2022)
ID<-factor(c(rep(seq(1,8),each=3)))#gives me 8 numbers, assigning each number 3 consecutive spots, in sequence
Resilience<-rnorm(24,mean=c(5.7,6.21,6.26),sd=c(.88,.79,.37)) #gives me a column of 24 numbers with the specified Ms and SD
Wave<-rep(c("Pre","Post", "FollowUp"),each=1,8) #repeats pre, post, follow-up once each, 8 times
Amodeo_long<-data.frame(ID, Wave, Resilience)
#OneWay_mod<-aov(Resilience~Wave + Error(ID/(Wave)), AmodeoSIM)
#summary(OneWay_mod)
#model.tables(OneWay_mod,"means")
View(Amodeo_long)
str(Amodeo_long)
Amodeo_long$Wave <- factor(Amodeo_long$Wave, levels = c("Pre", "Post", "FollowUp"))
str(Amodeo_long)
library(reshape2)
# Create a new df (Amodeo_wide)
# Identify the original df
# We are telling it to connect the values of the Resilience variable its respective Wave designation
Amodeo_wide <- reshape2::dcast(data = Amodeo_long, formula =ID~Wave, value.var = "Resilience")
#doublecheck to see if they did what you think
str(Amodeo_wide)
Amodeo_wide$ID <- factor(Amodeo_wide$ID)
View(Amodeo_wide)
#doublecheck to see if they did what you think
str(Amodeo_wide)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(Amodeo_long, "Amodeo_longRDS.rds")
saveRDS(Amodeo_wide, "Amodeo_wideRDS.rds")
#bring back the simulated dat from an .rds file
Amodeo_long <- readRDS("Amodeo_longRDS.rds")
Amodeo_wide <- readRDS("Amodeo_wideRDS.rds")
str(Amodeo_long)
library(psych)
psych::describeBy(Amodeo_long$Resilience, Wave, data = Amodeo_long)
library(psych)
psych::describeBy(Amodeo_long$Resilience, Wave, mat = TRUE, data = Amodeo_long)
str(Amodeo_long)
psych::describe(Amodeo_wide)
boxplot (Resilience ~ Wave, data = Amodeo_long, xlab = "Wave", ylab = "Resilience", n.label = TRUE)
mean(Amodeo_long$Resilience)
library(tidyverse)
Amodeo_long <- Amodeo_long %>%
mutate(m_dev = Resilience-mean(Resilience))
View(Amodeo_long)
sum(Amodeo_long$m_dev)
options(scipen=999)#eliminates scientific notation
sum(Amodeo_long$m_dev)
Amodeo_long <- Amodeo_long %>%
mutate(m_devSQ = m_dev^2)
sum(Amodeo_long$m_devSQ)
library(psych)
describeBy(Resilience ~ ID, data = Amodeo_long, mat = TRUE, digits = 3)
(.605^2*(3-1)) + (.760^2*(3-1)) + (.992^2*(3-1))+ (.568^2*(3-1))+ (.824^2*(3-1))+ (.146^2*(3-1))+ (.248^2*(3-1)) + (.553^2*(3-1))
library(psych)
describe(Amodeo_wide)
mean(Amodeo_long$Resilience)
(8*(6.14 - 6.017)^2) + (8*(6.33 - 6.017)^2) + (8*(5.59 - 6.017)^2)
#df is 3-1 = 2
6.636 - 2.363
16-2
11.66 - 6.64
23-16
# mean squares for the model
2.36/2
# mean squares for the residual
4.27 / 14
1.18 / .305
#looking up the F critical values
qf(.05, 2, 14, lower.tail=FALSE)#Model F critical value
library(ggpubr)
bxp <- ggboxplot(Amodeo_long, x = "Wave", y = "Resilience", add = "point", xlab = "Assessment Wave", ylab = "Self-Perception of Resilience")
bxp
library(rstatix)
Amodeo_long %>%
group_by(Wave)%>%
identify_outliers(Resilience)
#?identify_outliers
library(psych)
psych::describeBy(Resilience ~ Wave, mat=TRUE, data = Amodeo_long)
Amodeo_long %>%
group_by(Wave) %>%
shapiro_test(Resilience)
ggqqplot(Amodeo_long, "Resilience", facet.by = "Wave")
str(Amodeo_long)
library(rstatix)
RM_AOV <- anova_test(data = Amodeo_long, dv = Resilience, wid = ID, within = Wave)
RM_AOV
pwc <- Amodeo_long %>%
pairwise_t_test(Resilience~Wave, paired = TRUE, p.adjust.method = "bonferroni")
pwc
pwc <- pwc %>% add_xy_position(x = "Wave")
bxp +
stat_pvalue_manual(pwc) +
labs(
subtitle = get_test_label(RM_AOV, detailed = TRUE),
caption = get_pwc_label(pwc)
)
library(MASS)
write.matrix(pwc, sep = ",", file = "PWC.csv")
(3 * (3-1))/2
.05/3
library(WebPower)
wp.rmanova(n=8, ng=1, nm=3, f = .5047, nscor = .689, alpha = .05, power = NULL, type = 1)
wp.rmanova(n=NULL, ng=1, nm=3, f = .5047, nscor = .689, alpha = .05, power = .80, type = 1)
library(effectsize)
eta2_to_f(.203)
library(effectsize)
eta2_to_f(.203)
library(car)
waveLevels <- c(1,2,3)
waveFactor <- as.factor(waveLevels)
waveFrame <- data.frame(waveFactor)
waveBind <-cbind(Amodeo_wide$Pre, Amodeo_wide$Post, Amodeo_wide$FollowUp)
waveModel<- lm(waveBind~1)
analysis <-Anova(waveModel, idata=waveFrame, idesign=~waveFactor)
summary(analysis)
library(tidyverse)
set.seed(210813)#change this to any different number (and rerun the simulation) to rework the chapter problem
AttWhite<-round(c(rnorm(98,mean=76.79,sd=18.55),rnorm(95,mean=75.37,sd=18.99),rnorm(98, mean=77.47, sd=18.95), rnorm(95, mean=75.81, sd=19.29), rnorm(98, mean=77.79, sd=17.25), rnorm(95, mean=75.89, sd=19.44)),3) #sample size, M and SD for each cell; this will put it in a long file
AttWhite[AttWhite>100]<-100 #set upper bound for variable
AttWhite[AttWhite<0]<-0 #set lower bound for variable
AttArab<-round(c(rnorm(98,mean=64.11,sd=20.97),rnorm(95,mean=64.37,sd=20.03),rnorm(98, mean=64.16, sd=21.64), rnorm(95, mean=70.52, sd=18.55), rnorm(98, mean=65.29, sd=19.76), rnorm(95, mean=70.30, sd=17.98)),3)
AttArab[AttArab>100]<-100 #set upper bound for variable
AttArab[AttArab<0]<-0 #set lower bound for variable
rowID <- factor(seq(1,579))
caseID <- rep((1:193),3)
Wave <- c(rep("Baseline",193), rep("Post1", 193), rep ("Post2", 193))
COND <- c(rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95))
Murrar_df<- data.frame(rowID, caseID, Wave, COND, AttArab, AttWhite) #groups the 3 variables into a single df:  ID#, DV, condition
#Arab_2way <- anova_test(
#data = Murrar_df, dv = AttArab, wid = caseID, #UEdf is our df, dv is our DV, wid is the participant ID
#between = COND, within = Wave # between is the between-subjects variable, within is the within subjects variable
#  )
#Arab_2way
#Diff<-round(c(rnorm(98,mean=12.68,sd=15.57),rnorm(95,mean=11.00,sd=17.25),rnorm(98, mean=13.31, sd=16.87), rnorm(95, mean=5.29, #sd=13.73), rnorm(98, mean=12.50, sd=16.24), rnorm(95, mean=5.60, sd=15.18)),3) #sample size, M and SD for each cell; this will #put it in a long file
str(Murrar_df)
#make caseID a factor
Murrar_df[,'caseID'] <- as.factor(Murrar_df[,'caseID'])
#make Wave an ordered factor
Murrar_df$Wave <- factor(Murrar_df$Wave, levels = c("Baseline", "Post1", "Post2"))
#make COND an ordered factor
Murrar_df$COND <- factor(Murrar_df$COND, levels = c("Friends", "LittleMosque"))
str(Murrar_df)
Murrar_df$Diff <- Murrar_df$AttWhite - Murrar_df$AttArab
View(Murrar_df)
library(psych)
psych::describe(Murrar_df)
library(psych)
psych::describeBy(Diff ~ Wave + COND, data = Murrar_df, mat=TRUE)
library(ggpubr)
CNDwiWV <- ggboxplot(
Murrar_df, x = "Wave", y = "Diff",
color = "COND", palette = "jco", xlab = "Assessment Wave", ylab = "Difference in Attitudes towards Whites and Arabs",
)
CNDwiWV
WVwiCND <- ggboxplot(
Murrar_df, x = "COND", y = "Diff",
color = "Wave", palette = "jco", xlab = "Treatment Condition", ylab = "Difference in Attitudes towards Whites and Arabs"
)
WVwiCND
library(rstatix)
Murrar_df %>%
group_by(Wave, COND) %>%
identify_outliers(Diff)
Murrar_df %>%
group_by(Wave, COND) %>%
shapiro_test(Diff)
ggqqplot(Murrar_df, "Diff", ggtheme = theme_bw()) +  facet_grid(Wave ~ COND)
573/3
95+98
View(Murrar_df)
WVwiCND <- ggboxplot(
Murrar_df, x = "COND", y = "Diff",
color = "Wave", palette = "jco", xlab = "Treatment Condition", ylab = "Difference in Attitudes towards Whites and Arabs"
)
WVwiCND
library(rstatix)
Murrar_df %>%
group_by(Wave, COND) %>%
identify_outliers(Diff)
Murrar_df %>%
group_by(Wave) %>%
levene_test(Diff ~ COND)
box_m(Murrar_df[, "Diff", drop = FALSE], Murrar_df$COND)
?anova_test
Diff_2way <- rstatix::anova_test(
data = Murrar_df, dv = Diff, wid = caseID, #Murrar_df is our df, Diff is our df, wid is the caseID
between = COND, within = Wave # between is the between-subjects variable, within is the within subjects variable
)
Diff_2way
SimpleWave <- Murrar_df %>% #crate an object to hold the output
group_by(Wave) %>% #this group_by function is what results in three, one-way ANOVAs for each of the waves, separately
anova_test(dv = Diff, wid = caseID, between = COND) %>% #the between = Cond means that each level of cond will be compared
get_anova_table() %>%
adjust_pvalue(method = "bonferroni") #we will get both the standard and adjusted p values
SimpleWave
options(scipen=999)#eliminates scientific notation
SimpleWave <- Murrar_df %>% #crate an object to hold the output
group_by(Wave) %>% #this group_by function is what results in three, one-way ANOVAs for each of the waves, separately
anova_test(dv = Diff, wid = caseID, between = COND) %>% #the between = Cond means that each level of cond will be compared
get_anova_table() %>%
adjust_pvalue(method = "bonferroni") #we will get both the standard and adjusted p values
SimpleWave
.05/3
SimpleCond <- Murrar_df %>%
group_by(COND) %>%
anova_test(dv = Diff, wid = caseID, within = Wave) %>%
get_anova_table() %>%
adjust_pvalue(method = "bonferroni")
SimpleCond
pwcWVwiGP <- Murrar_df %>%
group_by(COND) %>%
pairwise_t_test(
Diff ~ Wave, paired = TRUE, detailed = TRUE,
p.adjust.method = "bonferroni"
) #%>%
#select(-df, -statistic, -p) # Remove details
pwcWVwiGP
Murrar_df %>%
pairwise_t_test(
Diff ~ Wave, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwcWVwiGP <- pwcWVwiGP %>% add_xy_position(x = "Wave")
CNDwiWV +
stat_pvalue_manual(pwcWVwiGP, tip.length = 0, hide.ns = TRUE) +
labs(
subtitle = get_test_label(Diff_2way, detailed = TRUE),
caption = get_pwc_label(pwcWVwiGP)
)
pwcWVwiGP <- pwcWVwiGP %>% add_xy_position(x = "Wave") #pwcWVwiGP were my pairwise comparisons for the simple effect
WVwiCND +  #WVwiCND was the boxplot before I did the ANOVA
stat_pvalue_manual(pwcWVwiGP, tip.length = 0, hide.ns = TRUE) +
labs(
subtitle = get_test_label(Diff_2way, detailed = TRUE), #UE_2way was my omnibus ANOVA model
caption = get_pwc_label(pwcWVwiGP) #and again the pairwise comparisons for the simple effect
)
library(MASS)
write.matrix(pwcWVwiGP, sep = ",", file = "pwcWVwiGP.csv")
#this command can also be used to export other output
write.matrix(Diff_2way$ANOVA, sep = ",", file = "Diff_2way.csv") #can get name of specific part of object by using str(object)
write.matrix(SimpleWave, sep = ",", file = "SimpleWave.csv")
write.matrix(SimpleCond, sep = ",", file = "SimpleCond.csv")
library(effectsize)
eta2_to_f(0.017) #interaction effect
library(WebPower)
wp.rmanova(n=193, ng=2, nm=3, f = .1315, nscor = .99, alpha = .05, power = NULL, type = 2)
wp.rmanova(n=NULL, ng=2, nm=3, f = .1315, nscor = .99, alpha = .05, power = .80, type = 2)
library(tidyverse)
set.seed(210813)#change this to any different number (and rerun the simulation) to rework the chapter problem
AttWhite<-round(c(rnorm(98,mean=76.79,sd=18.55),rnorm(95,mean=75.37,sd=18.99),rnorm(98, mean=77.47, sd=18.95), rnorm(95, mean=75.81, sd=19.29), rnorm(98, mean=77.79, sd=17.25), rnorm(95, mean=75.89, sd=19.44)),3) #sample size, M and SD for each cell; this will put it in a long file
AttWhite[AttWhite>100]<-100 #set upper bound for variable
AttWhite[AttWhite<0]<-0 #set lower bound for variable
AttArab<-round(c(rnorm(98,mean=64.11,sd=20.97),rnorm(95,mean=64.37,sd=20.03),rnorm(98, mean=64.16, sd=21.64), rnorm(95, mean=70.52, sd=18.55), rnorm(98, mean=65.29, sd=19.76), rnorm(95, mean=70.30, sd=17.98)),3)
AttArab[AttArab>100]<-100 #set upper bound for variable
AttArab[AttArab<0]<-0 #set lower bound for variable
rowID <- factor(seq(1,579))
caseID <- rep((1:193),3)
Wave <- c(rep("Baseline",193), rep("Post1", 193), rep ("Post2", 193))
COND <- c(rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95), rep("Friends", 98), rep("LittleMosque", 95))
Murrar_df<- data.frame(rowID, caseID, Wave, COND, AttArab, AttWhite) #groups the 3 variables into a single df:  ID#, DV, condition
#make caseID a factor
Murrar_df[,'caseID'] <- as.factor(Murrar_df[,'caseID'])
#make Wave an ordered factor
Murrar_df$Wave <- factor(Murrar_df$Wave, levels = c("Baseline", "Post1", "Post2"))
#make COND an ordered factor
Murrar_df$COND <- factor(Murrar_df$COND, levels = c("Friends", "LittleMosque"))
Murrar_df$Diff <- Murrar_df$AttWhite - Murrar_df$AttArab #creates the difference score
str(Murrar_df)
View(Murrar_df)
# Create a new df (Murrar_wide)
# Identify the original df
#In the transition from long-to-wide it seems like you can only do one time-varying variable at a time
#When there are multiple time-varying and time-static variables, but all the time-static variables on the left side of the tilde
#Put the name of the single time-varying variable in the concatonated list
Murrar1 <- reshape2::dcast(data = Murrar_df, formula =caseID +COND ~ Wave, value.var = "AttArab")
View(Murrar1)
#before restructuring a second variable, rename the first variable
Murrar1 <- rename(Murrar1, AttArabB = "Baseline", AttArabP1 = "Post1", AttArabP2 = "Post2")
#repeat the process for additional variables; but give the new df new names -- otherwise you'll overwrite your work
Murrar2 <- reshape2::dcast(data = Murrar_df, formula =caseID ~Wave, value.var = "AttWhite")
View(Murrar2)
Murrar2 <- rename(Murrar2, AttWhiteB = "Baseline", AttWhiteP1 = "Post1", AttWhiteP2 = "Post2")
View(Murrar2)
#Now we join them
Murrar_wide <- dplyr::full_join(Murrar1, Murrar2, by = c("caseID"))
View(Murrar_wide)
str(Murrar_wide )
library(ggpubr)
ggscatter (
Murrar_wide, x = "AttArabB", y = "AttArabP1",
color = "COND", add = "reg.line"
)+
stat_regline_equation(
aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = COND)
)
library(rstatix)
Murrar_wide %>% anova_test(AttArabP1 ~ COND*AttArabB)
options(scipen=999)#eliminates scientific notation
library(rstatix)
Murrar_wide %>% anova_test(AttArabP1 ~ COND*AttArabB)
library(broom)
AttArabB_Mod.metrics <- augment(AttArabB_Mod) #new model by augmenting the lm model
library(broom)
AttArabB_Mod.metrics <- augment(AttArabB_Mod) #new model by augmenting the lm model
AttArabB_Mod <- lm (AttArabP1 ~ AttArabB + COND, data = Murrar_wide) #Create a linear regression model predicting DV from COV & IV
AttArabB_Mod
library(broom)
AttArabB_Mod.metrics <- augment(AttArabB_Mod) #new model by augmenting the lm model
head(AttArabB_Mod.metrics,3) #shows the first three rows of the UEmodel.metrics
View(AttArabB_Mod.metrics)
View(AttArabB_Mod.metrics)
shapiro_test(AttArabB_Mod.metrics$.resid)#apply shapiro_test to that augmented model
AttArabB_Mod.metrics %>% levene_test(.resid ~ COND)
AttArabB_Mod.metrics%>% #from our model metrics
filter(abs(.std.resid)>3)%>% #show us any standardized residuals that are >3
as.data.frame()
View(AttArabB_Mod.metrics)
MurrarB_ANCOVA <- Murrar_wide %>%
anova_test(AttArabP1 ~ AttArabB + COND)
get_anova_table(MurrarB_ANCOVA )
library(emmeans)
pwc_B <- Murrar_wide %>%
emmeans_test(
AttArabP1 ~ COND, covariate = AttArabB,
p.adjust.method = "none"
)
pwc_B
emmeans_B <- get_emmeans(pwc_B)
emmeans_B
library(psych)
descripts_P1 <- describeBy(AttArabP1 ~ COND, data = Murrar_wide, mat = TRUE)
descripts_P1
#getting p values requires the corr.test function from the psych package;
#because some function names appear is multiple packages, it is sometimes essential to point a function to the proper package
#use the double colon to specify package and function
MurP1_Rmat <- psych::corr.test(Murrar_wide[c("AttArabB", "AttArabP1")])
MurP1_Rmat
apaTables::apa.cor.table(Murrar_wide[c("AttArabB", "AttArabP1")], table.number = 1 )
#You can save this as a Microsoft word document by adding this statement into the command: filename = "your_filename.doc"
library(MASS)
write.matrix(pwc_B, sep = ",", file = "pwc_B.csv")
write.matrix(emmeans_B, sep = ",", file = "emmeans_B.csv")
write.matrix(descripts_P1, sep = ",", file = "descripts_P1.csv")
pwc_B <- pwc_B %>% add_xy_position(x = "COND", fun = "mean_se")
ggline(get_emmeans(pwc_B), x = "COND", y = "emmean") +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +
stat_pvalue_manual(pwc_B, hide.ns = TRUE, tip.length = FALSE) +
labs(
subtitle = get_test_label(MurrarB_ANCOVA, detailed = TRUE),
caption = get_pwc_label(pwc_B)
)
library(ggpubr)
ggscatter (
Murrar_wide, x = "AttWhiteP1", y = "AttArabP1",
color = "COND", add = "reg.line"
)+
stat_regline_equation(
aes(label =  paste(..eq.label.., ..rr.label.., sep = "~~~~"), color = COND)
)
Murrar_wide %>% anova_test(AttArabP1 ~ COND*AttWhiteP1)
WhCov_mod <- lm (AttArabP1 ~ AttWhiteP1 + COND, data = Murrar_wide) #Create a linear regression model predicting DV from COV & IV
WhCov_mod
library(broom)
WhCov_mod.metrics <- augment(WhCov_mod)
head(WhCov_mod.metrics,3) #shows the first three rows of the UEcon_model.metrics
View(WhCov_mod.metrics)
shapiro_test(WhCov_mod.metrics$.resid)
WhCov_mod.metrics %>% levene_test(.resid ~ COND)
WhCov_mod.metrics %>%
filter(abs(.std.resid)>3)%>%
as.data.frame()
WhCov_ANCOVA <- Murrar_wide %>%
anova_test(AttArabP1 ~ AttWhiteP1 + COND)
get_anova_table(WhCov_ANCOVA)
library(emmeans)
pwc_cond <- Murrar_wide %>%
emmeans_test(
AttArabP1 ~ COND, covariate = AttWhiteP1,
p.adjust.method = "none"
)
pwc_cond
emmeans_cond <- get_emmeans(pwc_cond)
emmeans_cond
descripts_cond <- psych::describeBy(AttArabP1 ~ COND, data = Murrar_wide, mat = TRUE)
descripts_cond
apaTables::apa.cor.table(Murrar_wide[c("AttArabP1", "AttWhiteP1")], table.number = 2 )
#You can save this as a Microsoft word document by adding this statement into the command: filename = "your_filename.doc"
library(MASS)
write.matrix(pwc_cond, sep = ",", file = "pwc_con.csv")
write.matrix(emmeans_cond, sep = ",", file = "emmeans_con.csv")
write.matrix(descripts_cond, sep = ",", file = "descripts_con.csv")
pwc_cond <- pwc_cond %>% add_xy_position(x = "COND", fun = "mean_se")
ggline(get_emmeans(pwc_B), x = "COND", y = "emmean") +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +
stat_pvalue_manual(pwc_B, hide.ns = TRUE, tip.length = FALSE) +
labs(
subtitle = get_test_label(WhCov_ANCOVA, detailed = TRUE),
caption = get_pwc_label(pwc_cond)
)
install.packages(c("ggpubr", "lsr", "pwr2"))
knitr::opts_chunk$set(echo = TRUE)
pwr::pwr.f2.test(u = 2, v = NULL, f2 = .15, sig.level = .05, power = .80 )
install.packages("pwr")
pwr::pwr.f2.test(u = 2, v = NULL, f2 = .15, sig.level = .05, power = .80 )
pwr::pwr.f2.test(u = 2, v = NULL, f2 = .15, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 3, v = NULL, f2 = .15, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 3, v = NULL, f2 = .02, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 3, v = NULL, f2 = .07, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 4, v = NULL, f2 = .07, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 5, v = NULL, f2 = .07, sig.level = .05, power = .80)
pwr::pwr.f2.test(u = 3, v = NULL, f2 = .07, sig.level = .05, power = .80)
library(bookdown)
